{"version":3,"file":"js/377.f70d6212.js","mappings":"iPAESA,MAAM,mB,UACPC,EAAAA,EAAAA,IAEM,OAFDD,MAAM,iBAAgB,yBAE3B,K,GALRE,IAAA,EAM4BF,MAAM,U,GANlCE,IAAA,EAOoBF,MAAM,gB,GACmBA,MAAM,e,GAC9BA,MAAM,W,GAGFA,MAAM,gB,GAEVA,MAAM,Q,0CAZvBG,EAAAA,EAAAA,IAiBM,MAjBNC,EAiBM,CAhBFC,EAGWC,EAAAC,UAAO,WAAlBJ,EAAAA,EAAAA,IAAoD,MAApDK,EAAmC,kBAAW,WAC9CL,EAAAA,EAAAA,IAWM,MAXNM,EAWM,gBAVFN,EAAAA,EAAAA,IASMO,EAAAA,GAAA,MAjBlBC,EAAAA,EAAAA,IAQuCL,EAAAM,MAAfC,K,WAAZV,EAAAA,EAAAA,IASM,MATNW,EASM,EARFb,EAAAA,EAAAA,IAIM,MAJNc,EAIM,EAHFd,EAAAA,EAAAA,IACsE,OADjED,OAVzBgB,EAAAA,EAAAA,IAAA,CAU+B,qBAA6BH,EAAYI,oB,QAAgD,WAA3BJ,EAAYI,gBAAe,SACxE,KAACC,EAAAA,EAAAA,IAAGL,EAAYM,mBAAiB,IAC7DlB,EAAAA,EAAAA,IAAiF,MAAjFmB,GAAiFF,EAAAA,EAAAA,IAApDG,EAAAC,WAAWT,EAAYU,sBAAmB,MAE3EtB,EAAAA,EAAAA,IAEM,MAFNuB,GAEMN,EAAAA,EAAAA,IADCL,EAAYY,wBAAsB,Q,yBAazD,MAAMC,EAAU,CACZ,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,GAAI,MACJ,GAAI,OAIR,OACIC,KAAM,aACNf,IAAAA,GACI,MAAO,CACHA,KAAM,GACNL,SAAS,EAEjB,EACA,iBAAMqB,GACF,IACI,MAAMC,QAAeC,EAAAA,EAAAA,GAAc,2BACnCC,KAAKnB,KAAOiB,EAAOjB,IACvB,CAAE,MAAOoB,GACLC,MAAMD,EAAME,UAAUtB,KAAKuB,QAC/B,CAAE,QACEJ,KAAKxB,SAAU,CACnB,CACJ,EACA6B,QAAS,CACLd,UAAAA,CAAWe,GACP,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAQd,EAAQY,EAAKG,YACrBC,EAAOJ,EAAKK,UACZC,EAAON,EAAKO,cAClB,IAAIC,EAAQR,EAAKS,WACjB,MAAMC,GAAWV,EAAKW,aAAe,GAAK,IAAM,IAAMX,EAAKW,aACrDC,EAASJ,EAAQ,GAAK,KAAO,KAE/BA,EAAQ,GACRA,GAAS,GACQ,IAAVA,IACPA,EAAQ,IAGZ,MAAMK,EAAgB,GAAGX,KAASE,MAASE,OAAUE,KAASE,KAAWE,IACzE,OAAOC,CACX,I,UCzER,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://atm-vue/./src/components/History.vue","webpack://atm-vue/./src/components/History.vue?0760"],"sourcesContent":["<template>\r\n\r\n    <div class=\"history-wrapper\">\r\n        <div class=\"history-title\">\r\n            Transaction History\r\n        </div>\r\n        <div v-if=\"loading\" class=\"loader\">Loading....</div>\r\n        <div v-else class=\"transactions\">\r\n            <div v-for=\"transaction in data\" class=\"transaction\">\r\n                <div class=\"top-row\">\r\n                    <div class=\"transaction-amount\" :class=\"transaction.transactionType\"> {{ transaction.transactionType\r\n                        === \"Credit\" ? \"+\":\"-\"}} {{ transaction.transactionAmount }}</div>\r\n                    <div class=\"transaction-\">{{ formatDate(transaction.transactionDateTime) }}</div>\r\n                </div>\r\n                <div class=\"desc\">\r\n                    {{ transaction.transactionDescription }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport axiosInstance from \"@/axiosInterceptor\";\r\n\r\nconst dateMap = {\r\n    0: \"Jan\",\r\n    1: \"Feb\",\r\n    2: \"Mar\",\r\n    3: \"Apr\",\r\n    4: \"May\",\r\n    5: \"Jun\",\r\n    6: \"Jul\",\r\n    7: \"Aug\",\r\n    8: \"Sep\",\r\n    9: \"Oct\",\r\n    10: \"Nov\",\r\n    11: \"Dec\"\r\n};\r\n\r\n\r\nexport default {\r\n    name: \"Withdrawal\",\r\n    data() {\r\n        return {\r\n            data: [],\r\n            loading: true,\r\n        }\r\n    },\r\n    async beforeMount() {\r\n        try {\r\n            const result = await axiosInstance(\"/api/Atm/GetTransaction\")\r\n            this.data = result.data\r\n        } catch (error) {\r\n            alert(error.response?.data.message)\r\n        } finally {\r\n            this.loading = false\r\n        }\r\n    },\r\n    methods: {\r\n        formatDate(str) {\r\n            const temp = new Date(str);\r\n            const month = dateMap[temp.getMonth()];\r\n            const date = temp.getDate();\r\n            const year = temp.getFullYear();\r\n            let hours = temp.getHours();\r\n            const minutes = (temp.getMinutes() < 10 ? '0' : '') + temp.getMinutes();\r\n            const period = hours < 12 ? 'AM' : 'PM';\r\n\r\n            if (hours > 12) {\r\n                hours -= 12;\r\n            } else if (hours === 0) {\r\n                hours = 12;\r\n            }\r\n\r\n            const formattedDate = `${month} ${date}, ${year} - ${hours}:${minutes} ${period}`;\r\n            return formattedDate;\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.history-wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1em;\r\n    gap: 1em\r\n}\r\n\r\n.history-title {\r\n    font-weight: 600;\r\n    font-size: 1.2em\r\n}\r\n\r\n.transactions {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: .5em;\r\n    flex: 1;\r\n    overflow: auto;\r\n}\r\n\r\n.transaction {\r\n    border: 1px solid rgb(184, 184, 184);\r\n    padding: 1em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between\r\n}\r\n\r\n.top-row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 1em;\r\n}\r\n\r\n.desc {\r\n    color: rgb(98, 98, 98);\r\n}\r\n\r\n\r\n.transaction-amount {\r\n    font-weight: 600;\r\n}\r\n\r\n.transaction-amount.Credit {\r\n    color: green;\r\n}\r\n\r\n.transaction-amount.Debit {\r\n    color: red;\r\n}\r\n</style>","import { render } from \"./History.vue?vue&type=template&id=1b080120&scoped=true\"\nimport script from \"./History.vue?vue&type=script&lang=js\"\nexport * from \"./History.vue?vue&type=script&lang=js\"\n\nimport \"./History.vue?vue&type=style&index=0&id=1b080120&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b080120\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","$data","loading","_hoisted_3","_hoisted_4","_Fragment","_renderList","data","transaction","_hoisted_5","_hoisted_6","_normalizeClass","transactionType","_toDisplayString","transactionAmount","_hoisted_7","$options","formatDate","transactionDateTime","_hoisted_8","transactionDescription","dateMap","name","beforeMount","result","axiosInstance","this","error","alert","response","message","methods","str","temp","Date","month","getMonth","date","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","period","formattedDate","__exports__","render"],"sourceRoot":""}